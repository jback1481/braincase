package com.capdig.acorngrow.archie{    import flash.display.MovieClip;    import flash.events.*;    import com.capdig.acorngrow.archie.Voice;    import com.capdig.acorngrow.archie.SpeechBubble;    import com.capdig.utils.randomizer.Randomizer;    import com.capdig.utils.timer.SimpleTimer;        public class Face    {        private var rand:Randomizer;        private var speechFrames:Array;        // Archie reference        private var archie_mc:MovieClip;        private var archie_timer:SimpleTimer;        private var archie_bubble:SpeechBubble;        private var archie_voice:Voice;        // Strings for archie animation        private var startFace:String;        private var endFace:String;        private var audioPath:String;        private var audioText:String;        // Intervals for animation        private var sf_interval:int;        private var ef_interval:int;        // Intervals for mouth animation        private var intervalComplete:Boolean = true;        private var intervalDelay:int = 45;                        // Constructor        public function Face ()        {            // get the face sequence array            // load the text into the speech bubble object            // start face sequence (first face)            // load the audio            // change face sequence (talk faces)             // play the audio            // audio completes            // remove text bubble from display list            // end face sequence (final face)                        // Init the number randomizer            rand = new Randomizer();            // Init the keyframe array for the speech frames            speechFrames = new Array (                "speak1",                "speak2",                "speak3",                "speak4"            );        }                public function _talk (mc:MovieClip, sFace:String, eFace:String, path:String, text:String, sf_delay:int, ef_delay:int)        {            // Establish the reference object for target movieClip            archie_mc = mc;                        startFace = sFace;            endFace = eFace;            audioPath = path;            audioText = text;            sf_interval = sf_delay;            ef_interval = ef_delay;                        // Init the timer            archie_timer = new SimpleTimer();                        // Init archie's voice            archie_voice = new Voice();                        archie_voice._load(audioPath);            archie_voice.addEventListener(Voice.LOADING_COMPLETE, _archie_voice_loadComplete);        }                public function _archie_voice_loadComplete(event:Event)        {            archie_voice.removeEventListener(Voice.LOADING_COMPLETE, _archie_voice_loadComplete);            // Begin the face animation            _animateStartFace();        }                // Moves archie to the keyframe beginFace        // Adds audioText and speechBubble to the container clip        // Moves archie to mouth keyframes while voice.archie_snd plays        // Removes the speechBubble from the container clip        // Moves to endFace when audio completes.        public function _animateStartFace():void        {               archie_mc.rotation = -12;            // Set archie to the the beginFace keyframe            archie_mc.gotoAndStop(startFace);            // Wait X seconds before speaking            archie_timer._initTimer(sf_interval);            // Assign timeout listeners            archie_timer.addEventListener (SimpleTimer.TIMING_COMPLETE, _checkStartFace_timeout);        }        // archie_timer timeout        function _checkStartFace_timeout (event:Event):void        {            archie_timer.removeEventListener (SimpleTimer.TIMING_COMPLETE, _checkStartFace_timeout);            _animateVoice();        }                // Speech phase - moves between the 4 speech keyframes        public function _animateVoice()        {               // Init the speech bubble object            archie_bubble = new SpeechBubble();            // Add the speech bubble to the display list            archie_mc.addChild(archie_bubble);            // Add the text to the bubble            archie_bubble._addText(archie_mc, audioText);            //archie_bubble.addBubble(archie_mc, audioText);            // Play the loaded sound file            archie_voice._archie_snd._soundPlay();            archie_mc.addEventListener(Event.ENTER_FRAME, _animateMouth);        }                // Animates the mouth sequence based on a delay        public function _animateMouth(event:Event)        {                var soundComplete:Boolean = archie_voice._archie_snd._isComplete;                    if (soundComplete == false)            {                   if (intervalComplete == true)                {                    archie_timer._initTimer(intervalDelay);                    archie_timer.addEventListener(SimpleTimer.TIMING_COMPLETE, _waitForMouthTimer_timeout);                    intervalComplete = false;                }            }            else            {                archie_mc.removeEventListener(Event.ENTER_FRAME, _animateMouth);                archie_timer.removeEventListener(SimpleTimer.TIMING_COMPLETE, _waitForMouthTimer_timeout);                intervalComplete = true;                // Animate endFace                _animateEndFace();            }        }                // Moves the movieClip to the next frame and resets the timeout        public function _waitForMouthTimer_timeout(event:Event):void        {            // Debugging            var time:Date = new Date();            var ms:int = time.getMilliseconds();            //trace ("_animateMouth: "+ms);                        rand._randomize(0,3);            archie_mc.gotoAndStop(speechFrames[rand._randomNum]);                        intervalComplete = true;        }                // Moves the movieClip to the end face        public function _animateEndFace()        {            archie_mc.rotation = 0;            archie_mc.gotoAndStop(endFace);            // Remove the speech bubble object            archie_mc.removeChild(archie_bubble);            // Wait X seconds before speaking            archie_timer._initTimer(ef_interval);            // Assign timeout listeners            archie_timer.addEventListener (SimpleTimer.TIMING_COMPLETE, _checkEndFace_timeout);        }        // Resets the movieClip to it's initial state        function _checkEndFace_timeout (event:Event):void        {            archie_timer.removeEventListener (SimpleTimer.TIMING_COMPLETE, _checkEndFace_timeout);            archie_mc.gotoAndStop(0);        }                // Property access        public function get _voice ():Object        {            return archie_voice._archie_snd;        }    }}