// $Id$/*// Usage:var gong_snd:soundLoader = new soundLoader("sounds/gong.mp3", false);*/package {  import flash.display.Sprite;  import flash.events.*;  import flash.media.Sound;  import flash.media.SoundChannel;  import flash.net.URLRequest;  public class SoundLoader extends Sprite {    private var url:String;    private var request:URLRequest;    private var soundFactory:Sound;    private var channel:SoundChannel;    private var isPlaying:Boolean;    private var soundComplete:Boolean;    private var loopEnable:Boolean;      public function SoundLoader(soundURL:String, loop:Boolean):void {      url = soundURL;      request  = new URLRequest(url);      loopEnable = loop;      soundComplete = false;      soundFactory = new Sound();      soundFactory.load(request);            soundFactory.addEventListener(Event.COMPLETE, soundCompleteHandler);      soundFactory.addEventListener(Event.ID3, id3Handler);      soundFactory.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);      soundFactory.addEventListener(ProgressEvent.PROGRESS, progressHandler);    }        public function soundCompleted(event:Event):void {      soundComplete = true;      if (loopEnable == true) {        play ();      }    }        public function play ():void {      channel = soundFactory.play();      isPlaying = true;      //trace (isPlaying);      soundComplete = false;      channel.addEventListener(Event.SOUND_COMPLETE, soundCompleted);    }        public function stop ():void {      channel.stop();      channel.removeEventListener(Event.SOUND_COMPLETE, soundCompleted);    }        // Property access    public function get p_isPlaying () {      return isPlaying;    }        public function set p_isPlaying (value) {      isPlaying = value;    }        public function get p_isComplete () {      return soundComplete;    }        private function soundCompleteHandler(event:Event):void {      //trace("soundCompleteHandler: " + event);    }        private function ioErrorHandler(event:Event):void {      //trace("ioErrorHandler: " + event);    }            private function id3Handler(event:Event):void {      //trace("id3Handler: " + event);    }    private function progressHandler(event:ProgressEvent):void {      //trace("progressHandler: " + event);    }  }}