// $Id$// Usage:// var itemList:XML;// var myXMLPath:String = "xml/";// var myXMLLoader:xmlLoader = new xmlLoader(myXMLPath + "items.xml");// myXMLLoader.addEventListener (Event.COMPLETE, makeItemList);// function makeItemList (event:Event):void// {// 	itemList = myXMLLoader.p_XML;//	//trace (itemList);// }package {	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.xml.*;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IEventDispatcher;	import flash.events.IOErrorEvent;	public class XMLLoader extends EventDispatcher	{		private var importedXML:XML;		private var loader:URLLoader;		public function XMLLoader (dataPath:String)		{			var request:URLRequest = new URLRequest(dataPath);			loader = new URLLoader();						try			{				loader.load (request);			}			catch (error:SecurityError)			{				trace ("A SecurityError has occurred.");			}			loader.addEventListener (IOErrorEvent.IO_ERROR, errorHandler);			loader.addEventListener (Event.COMPLETE, loaderComplete);		}		private function loaderComplete (event:Event)		{			try			{				importedXML = new XML(loader.data);				dispatchEvent (new Event(Event.COMPLETE));			}			catch (e:TypeError)			{				trace ("Could not parse the XML file.");			}		}		private function errorHandler (event:IOErrorEvent):void		{			trace ("Had problem loading the XML File. Event:"+event);		}				// Property access		public function get p_XML ():XML		{			return importedXML;		}	}}