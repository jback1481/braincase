package {		import flash.display.Sprite;	import flash.events.Event;	import flash.geom.Matrix;		import CurvePoint;		public class SineWave extends Sprite {				private var _arr		:Array;		private var _tw			:Number;		private var _th			:Number;		private var dividerX	:Number;		private var _sy			:Number				private static const COLOURS	:Array	= new Array(0xDDDDDD, 0xCCCCCC);        private static const ALPHAS		:Array	= new Array(1, 1);		private static const RATIOS		:Array	= new Array(0, 255);		        private var matrix		:Matrix	= new Matrix()				public function SineWave(tw:Number, th:Number) {						_tw = tw			_th = th						matrix.createGradientBox(th/2, th/2, 1, 100, tw/2)						_arr = new Array();						var total:Number = _tw/48;			dividerX = _tw/total						_sy = _th/3;						for(var i:Number = 0; i<total+1;i++){				var point:CurvePoint = new CurvePoint(dividerX*(i), _sy)				_arr.push(point)			}						addEventListener(Event.ENTER_FRAME, sine);					}				private function sine(e:Event = null){						graphics.clear();			graphics.beginGradientFill("linear", COLOURS, ALPHAS, RATIOS, matrix)			graphics.lineStyle(4, 0x444444, 0);			graphics.moveTo(_arr[0].x, _arr[0].y)						for(var i:Number = 0; i<_arr.length;i++){				var a:Number = _arr[i].startpoint+(Math.sin(_arr[i].angle)*_arr[i].range);				_arr[i].angle += _arr[i].inc;				_arr[i].y = a;				var midpoint:Object = new Object();				if(i<_arr.length-1){					midpoint.x = (_arr[i+1].x+_arr[i].x)/2;					midpoint.y = (_arr[i+1].y+_arr[i].y)/2;				} else {					midpoint.x = (_tw+_arr[i].x)/2;					midpoint.y = (_sy+_arr[i].y)/2;				}				graphics.curveTo(_arr[i].x, _arr[i].y, midpoint.x, midpoint.y)			}						graphics.lineTo(_arr[_arr.length-1].x, _th)			graphics.lineTo(0, _th)			graphics.lineTo(0, _arr[0].y)			graphics.endFill()								}			}	}